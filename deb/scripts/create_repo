#!/bin/bash
#
# Description                   :      Creer et déploie un repo a partir de la bibliotheque de paquets
#
# Authors                       :      edena, mok 
#
##################################################

# Debug mode on
#set -x
# Debug mode off
set +x

# Load environment
FILE=$(readlink -f $0)
BASE=$(dirname $FILE)/..

# Chargement des méthodes et variables génériques
if [ ! -e $BASE/scripts/common.sh ];
then
    echo "common.sh doit être placé dans $BASE"
    exit 1
fi
source $BASE/scripts/common.sh || exit 1

# Chargement de conf
print_trace "Chargement du fichier de configuration..."
CONF=$1
if [ -z "${CONF}" ]
then
    print_error_and_exit "Usage : ./create_repo <CONF_FILE>"
fi
if [ ! -e ${CONF} ];
then
    print_error_and_exit "Conf file ${CONF} n'existe pas."
fi
source ${CONF}

# Vérification de la configuration
check_if_values_are_empty "PACKAGES_type REPO_name REPO_server_user REPO_server_domain REPO_apache REPO_www REPO_passphrase REPO_infos"
print_trace "Le fichier de configuration est correctement chargé."

# chargement des paquets a integrer au repo
# liste des paquets : charge depuis le fichier de configuration, ou prend tout le contenu du repertoire si la variable n'existe pas
if [ -z "${LIST_packages}" ]
then
    LIST_packages="$(find $DIR_packages/* -type d -prune)" 
fi
print_trace "Les paquets suivants seront intégrés au repository : ${LIST_packages}"


### A PARTIR DE CE POINT JE N'AI RIEN CHANGE : IL FAUT REMPLACER TOUT PAR LES BONNES VARIABLES/METHODES ###

create_debian_repo() {

# Vérfication des commandes installées
check_if_commands_exists "reprepro dpkg-deb"

print_trace "TODOOO : create_debian_repo"

# reset de incoming
if [ -d ${DIR_incomming} ]
 then
  	echo "--| suppression du contenu de ${DIR_incomming} "
  	rm -f ${DIR_incomming}/*
 else
     echo "--| creation de ${DIR_incomming} "
	 mkdir -p ${DIR_incomming}
fi

# creation paquet
for Rep in ${LIST_packages}; do

   # nom du repertoire
   fname=$(basename ${Rep})
   fbname=${fname%.*}
   # numero de version
   version=`grep "Version" ${Rep}/DEBIAN/control | cut -d' ' -f2 | cut -d'-' -f1`
   version_norm=${version/:/.}
   dpkg-deb --build ${Rep}  ${DIR_incomming}/${fbname}_${version_norm}.deb
done

# creation du fichier distributions
# TODOOO : il faut se servir du contenu de la variable REPO_infos

# creation du repository
echo "--| creation du repository "
reprepro -b ${DIR_repository} --ask-passphrase export

# creation du vhost repository
#if [ -d ${DIR_http} ]
#    then
#        if [ -f ${DIR_http}/sites-available/99-repository.conf ]
#            then
#            echo "--| Vhost repository ok"
#            else
#            echo " --| Creation du vhost repository"
#            sudo mkdir -p ${DIR_www}/repository
#            sudo cp ${HOME}/scripts/99-repository.conf ${DIR_http}/sites-available/
#            sudo ln -s ${DIR_http}/sites-available/99-repository.conf ${DIR_http}/sites-enabled/99-repository.conf
#            sudo /etc/init.d/apache2 restart
#
#          fi
#    else
#    echo " ${DIR_http} n'existe pas, le vhost repository ne sera pas cree."
#fi
#if [ -d ${DIR_www}/repository ]
#    then
#    sudo rsync -avz --delete-after ${HOME}/repository/ ${DIR_www}/repository/
#    sudo chown -R www-data:www-data ${DIR_www}/repository
#    # ajout du source list
#    sudo cp ${HOME}/scripts/superpaquet.list /etc/apt/sources.list.d/
##    sudo apt-get update
##    else
#    echo " le vhost repository n'existe pas. Il y a un probleme... "
#fi

}

create_rhel_repo() {
    print_trace "TODOOO : create_rhel_repo"
}

# Chargement de la bonne méthode de génération du repository
if [ "${PACKAGES_type}" == "rhel" ]
then
    create_rhel_repo
elif  [ "${PACKAGES_type}" == "debian" ]
then
    create_debian_repo
fi
