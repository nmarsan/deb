#!/bin/bash
#
# Description                   :      Creer et déploie un repo a partir de la bibliotheque de paquets
#
# Authors                       :      edena, mok 
#
##################################################

# Debug mode on
#set -x
# Debug mode off
set +x

# Load environment
FILE=$(readlink -f $0)
BASE=$(dirname $FILE)/..

# Chargement des méthodes et variables génériques
if [ ! -e $BASE/scripts/common.sh ];
then
    echo "common.sh doit être placé dans $BASE"
    exit 1
fi
source $BASE/scripts/common.sh || exit 1

# Chargement de conf
print_trace "Chargement du fichier de configuration..."
CONF=$1
if [ -z "${CONF}" ]
then
    print_error_and_exit "Usage : ./create_repo <CONF_FILE>"
fi
if [ ! -e ${CONF} ];
then
    print_error_and_exit "Conf file ${CONF} n'existe pas."
fi
source ${CONF}

# Vérification de la configuration
check_if_values_are_empty "PACKAGES_type REPO_name REPO_server_user REPO_server_domain REPO_apache REPO_www REPO_passphrase REPO_infos"
print_trace "Le fichier de configuration est correctement chargé."

# chargement des paquets a integrer au repo
# liste des paquets : charge depuis le fichier de configuration, ou prend tout le contenu du repertoire si la variable n'existe pas
if [ -z "${LIST_packages}" ]
then
    LIST_packages="$(find $DIR_packages/* -type d -prune)" 
fi
print_trace "Les paquets suivants seront intégrés au repository : ${LIST_packages}"


### A PARTIR DE CE POINT JE N'AI RIEN CHANGE : IL FAUT REMPLACER TOUT PAR LES BONNES VARIABLES/METHODES ###

create_debian_repo() {

# Vérfication des commandes installées
check_if_commands_exists "reprepro dpkg-deb expect"

# reset de incoming
if [ -d ${DIR_repository} ]
 then
  	print_trace "--| suppression du contenu de ${DIR_incoming} "
  	rm -fr ${DIR_repository}/*
fi
print_trace "--| creation de ${DIR_incoming} "
mkdir -p ${DIR_repository}/conf
mkdir -p ${DIR_incoming}
chmod 775 ${DIR_incoming}

# creation du fichier distributions
echo "${REPO_infos}" > ${DIR_repository}/conf/distributions

# creation paquet
for package in ${LIST_packages}; do
   Rep="${DIR_packages}/${package}"
   # numero de version
   version=`grep "Version" ${Rep}/DEBIAN/control | cut -d' ' -f2 | cut -d'-' -f1`
   version_norm=${version/:/.}
   dpkg-deb --build ${Rep}  ${DIR_incoming}/${package}_${version_norm}.deb
   # pour chaque distribution
   for distrib in ${REPO_distribs}; do
  # if [  ]
  #  then
  #     reprepro -b ${DIR_repository} includedeb ${distrib} ${DIR_incoming}/${package}_${version_norm}.deb
  #  else
        ${BASE}/scripts/reprepro_withpass ${DIR_repository} ${distrib} ${DIR_incoming}/${package}_${version_norm}.deb ${REPO_passphrase}
  # fi  
   done
  
 done

# rsync repository
rsync -rvz --delete-after ${DIR_repository}/ ${REPO_server_user}@${REPO_server_domain}:/${REPO_www}/


}

create_rhel_repo() {
    print_trace "TODOOO : create_rhel_repo"
}

# Chargement de la bonne méthode de génération du repository
if [ "${PACKAGES_type}" == "rhel" ]
then
    create_rhel_repo
elif  [ "${PACKAGES_type}" == "debian" ]
then
    create_debian_repo
fi
